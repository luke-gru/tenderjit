NOTES
=====

Run 1 test:
  ruby -v #=> 3.3.5
  RUBYOPT="--rjit" TENDERJIT_DEBUG=1 TEST_SUITE_PREFIX=dup bundle exec rake test

Passing tests:
dup
leave
jump
branchunless
branchif
getinstancevariable (for Objects)

Looking at:

Crashing tests:
duparray

Old tests:
getglobal

Tenderlove's Videos
===================
Streamed live on Oct 22, 2021
He worked on opt_aset for arrays
https://www.youtube.com/watch?v=JGHD3AO8cVA&ab_channel=Tenderlove%27sCoolStuff

Streamed live on Dec 3, 2021
He showed asmrepl and worked on expandarray for extended arrays that are long enough
The compiler didn't seem to be doing lazy BBV yet, or any lazy compiling
https://www.youtube.com/watch?v=ldyiSqLrdAg&t=2940s&ab_channel=Tenderlove%27sCoolStuff


TenderJIT#compile:
1) compile method(:foo)

2) @jit = Tenderjit.new
  *@jit.compile(method(:foo))

3) iseq = RubyVM::ISeq.of(method)
   iseq_internal = Compiler.method_to_iseq_t(method)
   compiler = TenderJIT::Compiler.new(iseq_internal)
   cfp = C.rb_control_frame.new
  *jit_addr = compiler.compile(cfp)

4) yarv_ir(iseq_i)
     Yarv.new(iseq_i, locals) # now append to @yarv.@instructions
     ~ foreach addr in iseq_i.insn_addrs
       ~ insn = INSNS.fetch(...) 
       * yarv.add_rjit_instruction(addr, insn)

5) getlocal_WC_0(addr, insn)
     add_insn :getlocal
       new_insn
         Instruction.new(name, pcs, insn, opnds)
       @instructions.append(insn)
       / yarv.add_rjit_instruction, @yarv.@instructions now full

6) cfg = @yarv.basic_blocks
     BasicBlock.build @insn_head, self, false
  
